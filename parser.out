Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> INT ID SEMICOLON
Rule 5     statement -> FLOAT ID SEMICOLON
Rule 6     statement -> STRING ID SEMICOLON
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     statement -> ID EQUALS STRING_LITERAL SEMICOLON
Rule 9     statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 10    statement -> WHILE LPAREN expression RPAREN statement
Rule 11    statement -> LBRACE statements RBRACE
Rule 12    statement -> IF LPAREN expression RPAREN statement
Rule 13    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 14    statement -> expression SEMICOLON
Rule 15    expression -> expression PLUS term
Rule 16    expression -> expression MINUS term
Rule 17    expression -> expression LOR term
Rule 18    expression -> expression LAND term
Rule 19    expression -> expression EQ term
Rule 20    expression -> expression NE term
Rule 21    expression -> expression LT expression
Rule 22    expression -> expression GT expression
Rule 23    expression -> expression LE expression
Rule 24    expression -> expression GE expression
Rule 25    expression -> term
Rule 26    term -> term TIMES factor
Rule 27    term -> term DIVIDE factor
Rule 28    term -> factor
Rule 29    factor -> NUMBER
Rule 30    factor -> FLOAT
Rule 31    factor -> STRING_LITERAL
Rule 32    factor -> ID
Rule 33    factor -> LPAREN expression RPAREN
Rule 34    expression -> ID EQUALS expression
Rule 35    expression -> LBRACKET elements RBRACKET
Rule 36    elements -> elements COMMA expression
Rule 37    elements -> expression
Rule 38    elements -> <empty>

Terminals, with rules where they appear

COMMA                : 36
DIVIDE               : 27
ELSE                 : 13
EQ                   : 19
EQUALS               : 7 8 34
FLOAT                : 5 30
FOR                  : 9
GE                   : 24
GT                   : 22
ID                   : 4 5 6 7 8 32 34
IF                   : 12 13
INT                  : 4
LAND                 : 18
LBRACE               : 11
LBRACKET             : 35
LE                   : 23
LOR                  : 17
LPAREN               : 9 10 12 13 33
LT                   : 21
MINUS                : 16
NE                   : 20
NUMBER               : 29
PLUS                 : 15
RBRACE               : 11
RBRACKET             : 35
RPAREN               : 9 10 12 13 33
SEMICOLON            : 4 5 6 7 8 9 9 14
STRING               : 6
STRING_LITERAL       : 8 31
TIMES                : 26
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

elements             : 35 36
expression           : 7 9 9 9 10 12 13 14 15 16 17 18 19 20 21 21 22 22 23 23 24 24 33 34 36 37
factor               : 26 27 28
program              : 0
statement            : 2 3 9 10 12 13 13
statements           : 1 2 11
term                 : 15 16 17 18 19 20 25 26 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statements .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statement                      shift and go to state 19
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 3

    (3) statements -> statement .

    INT             reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    FOR             reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    LBRACE          reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    LBRACKET        reduce using rule 3 (statements -> statement .)
    NUMBER          reduce using rule 3 (statements -> statement .)
    STRING_LITERAL  reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACE          reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> INT . ID SEMICOLON

    ID              shift and go to state 20


state 5

    (7) statement -> ID . EQUALS expression SEMICOLON
    (8) statement -> ID . EQUALS STRING_LITERAL SEMICOLON
    (34) expression -> ID . EQUALS expression
    (32) factor -> ID .

    EQUALS          shift and go to state 21
    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    SEMICOLON       reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MINUS           reduce using rule 32 (factor -> ID .)
    LOR             reduce using rule 32 (factor -> ID .)
    LAND            reduce using rule 32 (factor -> ID .)
    EQ              reduce using rule 32 (factor -> ID .)
    NE              reduce using rule 32 (factor -> ID .)
    LT              reduce using rule 32 (factor -> ID .)
    GT              reduce using rule 32 (factor -> ID .)
    LE              reduce using rule 32 (factor -> ID .)
    GE              reduce using rule 32 (factor -> ID .)


state 6

    (5) statement -> FLOAT . ID SEMICOLON
    (30) factor -> FLOAT .

    ID              shift and go to state 22
    TIMES           reduce using rule 30 (factor -> FLOAT .)
    DIVIDE          reduce using rule 30 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 30 (factor -> FLOAT .)
    PLUS            reduce using rule 30 (factor -> FLOAT .)
    MINUS           reduce using rule 30 (factor -> FLOAT .)
    LOR             reduce using rule 30 (factor -> FLOAT .)
    LAND            reduce using rule 30 (factor -> FLOAT .)
    EQ              reduce using rule 30 (factor -> FLOAT .)
    NE              reduce using rule 30 (factor -> FLOAT .)
    LT              reduce using rule 30 (factor -> FLOAT .)
    GT              reduce using rule 30 (factor -> FLOAT .)
    LE              reduce using rule 30 (factor -> FLOAT .)
    GE              reduce using rule 30 (factor -> FLOAT .)


state 7

    (6) statement -> STRING . ID SEMICOLON

    ID              shift and go to state 23


state 8

    (14) statement -> expression . SEMICOLON
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       shift and go to state 24
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 9

    (31) factor -> STRING_LITERAL .

    TIMES           reduce using rule 31 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 31 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 31 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 31 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 31 (factor -> STRING_LITERAL .)
    LOR             reduce using rule 31 (factor -> STRING_LITERAL .)
    LAND            reduce using rule 31 (factor -> STRING_LITERAL .)
    EQ              reduce using rule 31 (factor -> STRING_LITERAL .)
    NE              reduce using rule 31 (factor -> STRING_LITERAL .)
    LT              reduce using rule 31 (factor -> STRING_LITERAL .)
    GT              reduce using rule 31 (factor -> STRING_LITERAL .)
    LE              reduce using rule 31 (factor -> STRING_LITERAL .)
    GE              reduce using rule 31 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 31 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 31 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 31 (factor -> STRING_LITERAL .)


state 10

    (9) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN          shift and go to state 35


state 11

    (33) factor -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 36
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 12

    (10) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 39


state 13

    (11) statement -> LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statements                     shift and go to state 40
    statement                      shift and go to state 3
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 14

    (12) statement -> IF . LPAREN expression RPAREN statement
    (13) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 41


state 15

    (25) expression -> term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 25 (expression -> term .)
    PLUS            reduce using rule 25 (expression -> term .)
    MINUS           reduce using rule 25 (expression -> term .)
    LOR             reduce using rule 25 (expression -> term .)
    LAND            reduce using rule 25 (expression -> term .)
    EQ              reduce using rule 25 (expression -> term .)
    NE              reduce using rule 25 (expression -> term .)
    LT              reduce using rule 25 (expression -> term .)
    GT              reduce using rule 25 (expression -> term .)
    LE              reduce using rule 25 (expression -> term .)
    GE              reduce using rule 25 (expression -> term .)
    RPAREN          reduce using rule 25 (expression -> term .)
    RBRACKET        reduce using rule 25 (expression -> term .)
    COMMA           reduce using rule 25 (expression -> term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 16

    (35) expression -> LBRACKET . elements RBRACKET
    (36) elements -> . elements COMMA expression
    (37) elements -> . expression
    (38) elements -> .
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    RBRACKET        reduce using rule 38 (elements -> .)
    COMMA           reduce using rule 38 (elements -> .)
    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    elements                       shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 17

    (28) term -> factor .

    TIMES           reduce using rule 28 (term -> factor .)
    DIVIDE          reduce using rule 28 (term -> factor .)
    SEMICOLON       reduce using rule 28 (term -> factor .)
    PLUS            reduce using rule 28 (term -> factor .)
    MINUS           reduce using rule 28 (term -> factor .)
    LOR             reduce using rule 28 (term -> factor .)
    LAND            reduce using rule 28 (term -> factor .)
    EQ              reduce using rule 28 (term -> factor .)
    NE              reduce using rule 28 (term -> factor .)
    LT              reduce using rule 28 (term -> factor .)
    GT              reduce using rule 28 (term -> factor .)
    LE              reduce using rule 28 (term -> factor .)
    GE              reduce using rule 28 (term -> factor .)
    RPAREN          reduce using rule 28 (term -> factor .)
    RBRACKET        reduce using rule 28 (term -> factor .)
    COMMA           reduce using rule 28 (term -> factor .)


state 18

    (29) factor -> NUMBER .

    TIMES           reduce using rule 29 (factor -> NUMBER .)
    DIVIDE          reduce using rule 29 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 29 (factor -> NUMBER .)
    PLUS            reduce using rule 29 (factor -> NUMBER .)
    MINUS           reduce using rule 29 (factor -> NUMBER .)
    LOR             reduce using rule 29 (factor -> NUMBER .)
    LAND            reduce using rule 29 (factor -> NUMBER .)
    EQ              reduce using rule 29 (factor -> NUMBER .)
    NE              reduce using rule 29 (factor -> NUMBER .)
    LT              reduce using rule 29 (factor -> NUMBER .)
    GT              reduce using rule 29 (factor -> NUMBER .)
    LE              reduce using rule 29 (factor -> NUMBER .)
    GE              reduce using rule 29 (factor -> NUMBER .)
    RPAREN          reduce using rule 29 (factor -> NUMBER .)
    RBRACKET        reduce using rule 29 (factor -> NUMBER .)
    COMMA           reduce using rule 29 (factor -> NUMBER .)


state 19

    (2) statements -> statements statement .

    INT             reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    FOR             reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    LBRACE          reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    LBRACKET        reduce using rule 2 (statements -> statements statement .)
    NUMBER          reduce using rule 2 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACE          reduce using rule 2 (statements -> statements statement .)


state 20

    (4) statement -> INT ID . SEMICOLON

    SEMICOLON       shift and go to state 46


state 21

    (7) statement -> ID EQUALS . expression SEMICOLON
    (8) statement -> ID EQUALS . STRING_LITERAL SEMICOLON
    (34) expression -> ID EQUALS . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    STRING_LITERAL  shift and go to state 48
    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    LPAREN          shift and go to state 11

    expression                     shift and go to state 47
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 22

    (5) statement -> FLOAT ID . SEMICOLON

    SEMICOLON       shift and go to state 49


state 23

    (6) statement -> STRING ID . SEMICOLON

    SEMICOLON       shift and go to state 50


state 24

    (14) statement -> expression SEMICOLON .

    INT             reduce using rule 14 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 14 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 14 (statement -> expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 14 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 14 (statement -> expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 14 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 14 (statement -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 14 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 14 (statement -> expression SEMICOLON .)
    $end            reduce using rule 14 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 14 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> expression SEMICOLON .)


state 25

    (15) expression -> expression PLUS . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 51
    factor                         shift and go to state 17

state 26

    (16) expression -> expression MINUS . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 53
    factor                         shift and go to state 17

state 27

    (17) expression -> expression LOR . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 54
    factor                         shift and go to state 17

state 28

    (18) expression -> expression LAND . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 55
    factor                         shift and go to state 17

state 29

    (19) expression -> expression EQ . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 56
    factor                         shift and go to state 17

state 30

    (20) expression -> expression NE . term
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    term                           shift and go to state 57
    factor                         shift and go to state 17

state 31

    (21) expression -> expression LT . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 58
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 32

    (22) expression -> expression GT . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 59
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 33

    (23) expression -> expression LE . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 60
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 34

    (24) expression -> expression GE . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 61
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 35

    (9) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 62
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 36

    (33) factor -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 37

    (34) expression -> ID . EQUALS expression
    (32) factor -> ID .

    EQUALS          shift and go to state 64
    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    RPAREN          reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MINUS           reduce using rule 32 (factor -> ID .)
    LOR             reduce using rule 32 (factor -> ID .)
    LAND            reduce using rule 32 (factor -> ID .)
    EQ              reduce using rule 32 (factor -> ID .)
    NE              reduce using rule 32 (factor -> ID .)
    LT              reduce using rule 32 (factor -> ID .)
    GT              reduce using rule 32 (factor -> ID .)
    LE              reduce using rule 32 (factor -> ID .)
    GE              reduce using rule 32 (factor -> ID .)
    RBRACKET        reduce using rule 32 (factor -> ID .)
    COMMA           reduce using rule 32 (factor -> ID .)
    SEMICOLON       reduce using rule 32 (factor -> ID .)


state 38

    (30) factor -> FLOAT .

    TIMES           reduce using rule 30 (factor -> FLOAT .)
    DIVIDE          reduce using rule 30 (factor -> FLOAT .)
    RPAREN          reduce using rule 30 (factor -> FLOAT .)
    PLUS            reduce using rule 30 (factor -> FLOAT .)
    MINUS           reduce using rule 30 (factor -> FLOAT .)
    LOR             reduce using rule 30 (factor -> FLOAT .)
    LAND            reduce using rule 30 (factor -> FLOAT .)
    EQ              reduce using rule 30 (factor -> FLOAT .)
    NE              reduce using rule 30 (factor -> FLOAT .)
    LT              reduce using rule 30 (factor -> FLOAT .)
    GT              reduce using rule 30 (factor -> FLOAT .)
    LE              reduce using rule 30 (factor -> FLOAT .)
    GE              reduce using rule 30 (factor -> FLOAT .)
    RBRACKET        reduce using rule 30 (factor -> FLOAT .)
    COMMA           reduce using rule 30 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 30 (factor -> FLOAT .)


state 39

    (10) statement -> WHILE LPAREN . expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 65
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 40

    (11) statement -> LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 66
    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statement                      shift and go to state 19
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 41

    (12) statement -> IF LPAREN . expression RPAREN statement
    (13) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 67
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 42

    (26) term -> term TIMES . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    factor                         shift and go to state 68

state 43

    (27) term -> term DIVIDE . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 52
    LPAREN          shift and go to state 11

    factor                         shift and go to state 69

state 44

    (35) expression -> LBRACKET elements . RBRACKET
    (36) elements -> elements . COMMA expression

    RBRACKET        shift and go to state 70
    COMMA           shift and go to state 71


state 45

    (37) elements -> expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RBRACKET        reduce using rule 37 (elements -> expression .)
    COMMA           reduce using rule 37 (elements -> expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 46

    (4) statement -> INT ID SEMICOLON .

    INT             reduce using rule 4 (statement -> INT ID SEMICOLON .)
    FLOAT           reduce using rule 4 (statement -> INT ID SEMICOLON .)
    STRING          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    ID              reduce using rule 4 (statement -> INT ID SEMICOLON .)
    FOR             reduce using rule 4 (statement -> INT ID SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    IF              reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> INT ID SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    $end            reduce using rule 4 (statement -> INT ID SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> INT ID SEMICOLON .)


state 47

    (7) statement -> ID EQUALS expression . SEMICOLON
    (34) expression -> ID EQUALS expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
    SEMICOLON       shift and go to state 72
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34

  ! SEMICOLON       [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LOR             [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LAND            [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! NE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! GE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]


state 48

    (8) statement -> ID EQUALS STRING_LITERAL . SEMICOLON
    (31) factor -> STRING_LITERAL .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 73
    TIMES           reduce using rule 31 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 31 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 31 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 31 (factor -> STRING_LITERAL .)
    LOR             reduce using rule 31 (factor -> STRING_LITERAL .)
    LAND            reduce using rule 31 (factor -> STRING_LITERAL .)
    EQ              reduce using rule 31 (factor -> STRING_LITERAL .)
    NE              reduce using rule 31 (factor -> STRING_LITERAL .)
    LT              reduce using rule 31 (factor -> STRING_LITERAL .)
    GT              reduce using rule 31 (factor -> STRING_LITERAL .)
    LE              reduce using rule 31 (factor -> STRING_LITERAL .)
    GE              reduce using rule 31 (factor -> STRING_LITERAL .)

  ! SEMICOLON       [ reduce using rule 31 (factor -> STRING_LITERAL .) ]


state 49

    (5) statement -> FLOAT ID SEMICOLON .

    INT             reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    FLOAT           reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    STRING          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    ID              reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    FOR             reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LBRACE          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    IF              reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LBRACKET        reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    NUMBER          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    $end            reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    ELSE            reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)


state 50

    (6) statement -> STRING ID SEMICOLON .

    INT             reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    FLOAT           reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    STRING          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    ID              reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    FOR             reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LBRACE          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    IF              reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LBRACKET        reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    $end            reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    ELSE            reduce using rule 6 (statement -> STRING ID SEMICOLON .)


state 51

    (15) expression -> expression PLUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 15 (expression -> expression PLUS term .)
    PLUS            reduce using rule 15 (expression -> expression PLUS term .)
    MINUS           reduce using rule 15 (expression -> expression PLUS term .)
    LOR             reduce using rule 15 (expression -> expression PLUS term .)
    LAND            reduce using rule 15 (expression -> expression PLUS term .)
    EQ              reduce using rule 15 (expression -> expression PLUS term .)
    NE              reduce using rule 15 (expression -> expression PLUS term .)
    LT              reduce using rule 15 (expression -> expression PLUS term .)
    GT              reduce using rule 15 (expression -> expression PLUS term .)
    LE              reduce using rule 15 (expression -> expression PLUS term .)
    GE              reduce using rule 15 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 15 (expression -> expression PLUS term .)
    COMMA           reduce using rule 15 (expression -> expression PLUS term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 52

    (32) factor -> ID .

    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    SEMICOLON       reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MINUS           reduce using rule 32 (factor -> ID .)
    LOR             reduce using rule 32 (factor -> ID .)
    LAND            reduce using rule 32 (factor -> ID .)
    EQ              reduce using rule 32 (factor -> ID .)
    NE              reduce using rule 32 (factor -> ID .)
    LT              reduce using rule 32 (factor -> ID .)
    GT              reduce using rule 32 (factor -> ID .)
    LE              reduce using rule 32 (factor -> ID .)
    GE              reduce using rule 32 (factor -> ID .)
    RPAREN          reduce using rule 32 (factor -> ID .)
    RBRACKET        reduce using rule 32 (factor -> ID .)
    COMMA           reduce using rule 32 (factor -> ID .)


state 53

    (16) expression -> expression MINUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 16 (expression -> expression MINUS term .)
    PLUS            reduce using rule 16 (expression -> expression MINUS term .)
    MINUS           reduce using rule 16 (expression -> expression MINUS term .)
    LOR             reduce using rule 16 (expression -> expression MINUS term .)
    LAND            reduce using rule 16 (expression -> expression MINUS term .)
    EQ              reduce using rule 16 (expression -> expression MINUS term .)
    NE              reduce using rule 16 (expression -> expression MINUS term .)
    LT              reduce using rule 16 (expression -> expression MINUS term .)
    GT              reduce using rule 16 (expression -> expression MINUS term .)
    LE              reduce using rule 16 (expression -> expression MINUS term .)
    GE              reduce using rule 16 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 16 (expression -> expression MINUS term .)
    COMMA           reduce using rule 16 (expression -> expression MINUS term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 54

    (17) expression -> expression LOR term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 17 (expression -> expression LOR term .)
    PLUS            reduce using rule 17 (expression -> expression LOR term .)
    MINUS           reduce using rule 17 (expression -> expression LOR term .)
    LOR             reduce using rule 17 (expression -> expression LOR term .)
    LAND            reduce using rule 17 (expression -> expression LOR term .)
    EQ              reduce using rule 17 (expression -> expression LOR term .)
    NE              reduce using rule 17 (expression -> expression LOR term .)
    LT              reduce using rule 17 (expression -> expression LOR term .)
    GT              reduce using rule 17 (expression -> expression LOR term .)
    LE              reduce using rule 17 (expression -> expression LOR term .)
    GE              reduce using rule 17 (expression -> expression LOR term .)
    RPAREN          reduce using rule 17 (expression -> expression LOR term .)
    RBRACKET        reduce using rule 17 (expression -> expression LOR term .)
    COMMA           reduce using rule 17 (expression -> expression LOR term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 55

    (18) expression -> expression LAND term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> expression LAND term .)
    PLUS            reduce using rule 18 (expression -> expression LAND term .)
    MINUS           reduce using rule 18 (expression -> expression LAND term .)
    LOR             reduce using rule 18 (expression -> expression LAND term .)
    LAND            reduce using rule 18 (expression -> expression LAND term .)
    EQ              reduce using rule 18 (expression -> expression LAND term .)
    NE              reduce using rule 18 (expression -> expression LAND term .)
    LT              reduce using rule 18 (expression -> expression LAND term .)
    GT              reduce using rule 18 (expression -> expression LAND term .)
    LE              reduce using rule 18 (expression -> expression LAND term .)
    GE              reduce using rule 18 (expression -> expression LAND term .)
    RPAREN          reduce using rule 18 (expression -> expression LAND term .)
    RBRACKET        reduce using rule 18 (expression -> expression LAND term .)
    COMMA           reduce using rule 18 (expression -> expression LAND term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 56

    (19) expression -> expression EQ term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> expression EQ term .)
    PLUS            reduce using rule 19 (expression -> expression EQ term .)
    MINUS           reduce using rule 19 (expression -> expression EQ term .)
    LOR             reduce using rule 19 (expression -> expression EQ term .)
    LAND            reduce using rule 19 (expression -> expression EQ term .)
    EQ              reduce using rule 19 (expression -> expression EQ term .)
    NE              reduce using rule 19 (expression -> expression EQ term .)
    LT              reduce using rule 19 (expression -> expression EQ term .)
    GT              reduce using rule 19 (expression -> expression EQ term .)
    LE              reduce using rule 19 (expression -> expression EQ term .)
    GE              reduce using rule 19 (expression -> expression EQ term .)
    RPAREN          reduce using rule 19 (expression -> expression EQ term .)
    RBRACKET        reduce using rule 19 (expression -> expression EQ term .)
    COMMA           reduce using rule 19 (expression -> expression EQ term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 57

    (20) expression -> expression NE term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression NE term .)
    PLUS            reduce using rule 20 (expression -> expression NE term .)
    MINUS           reduce using rule 20 (expression -> expression NE term .)
    LOR             reduce using rule 20 (expression -> expression NE term .)
    LAND            reduce using rule 20 (expression -> expression NE term .)
    EQ              reduce using rule 20 (expression -> expression NE term .)
    NE              reduce using rule 20 (expression -> expression NE term .)
    LT              reduce using rule 20 (expression -> expression NE term .)
    GT              reduce using rule 20 (expression -> expression NE term .)
    LE              reduce using rule 20 (expression -> expression NE term .)
    GE              reduce using rule 20 (expression -> expression NE term .)
    RPAREN          reduce using rule 20 (expression -> expression NE term .)
    RBRACKET        reduce using rule 20 (expression -> expression NE term .)
    COMMA           reduce using rule 20 (expression -> expression NE term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 58

    (21) expression -> expression LT expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       reduce using rule 21 (expression -> expression LT expression .)
    LOR             reduce using rule 21 (expression -> expression LT expression .)
    LAND            reduce using rule 21 (expression -> expression LT expression .)
    LT              reduce using rule 21 (expression -> expression LT expression .)
    GT              reduce using rule 21 (expression -> expression LT expression .)
    LE              reduce using rule 21 (expression -> expression LT expression .)
    GE              reduce using rule 21 (expression -> expression LT expression .)
    RPAREN          reduce using rule 21 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 21 (expression -> expression LT expression .)
    COMMA           reduce using rule 21 (expression -> expression LT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    EQ              shift and go to state 29
    NE              shift and go to state 30

  ! PLUS            [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! LOR             [ shift and go to state 27 ]
  ! LAND            [ shift and go to state 28 ]
  ! LT              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]


state 59

    (22) expression -> expression GT expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       reduce using rule 22 (expression -> expression GT expression .)
    LOR             reduce using rule 22 (expression -> expression GT expression .)
    LAND            reduce using rule 22 (expression -> expression GT expression .)
    LT              reduce using rule 22 (expression -> expression GT expression .)
    GT              reduce using rule 22 (expression -> expression GT expression .)
    LE              reduce using rule 22 (expression -> expression GT expression .)
    GE              reduce using rule 22 (expression -> expression GT expression .)
    RPAREN          reduce using rule 22 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 22 (expression -> expression GT expression .)
    COMMA           reduce using rule 22 (expression -> expression GT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    EQ              shift and go to state 29
    NE              shift and go to state 30

  ! PLUS            [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! LOR             [ shift and go to state 27 ]
  ! LAND            [ shift and go to state 28 ]
  ! LT              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]


state 60

    (23) expression -> expression LE expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       reduce using rule 23 (expression -> expression LE expression .)
    LOR             reduce using rule 23 (expression -> expression LE expression .)
    LAND            reduce using rule 23 (expression -> expression LE expression .)
    LT              reduce using rule 23 (expression -> expression LE expression .)
    GT              reduce using rule 23 (expression -> expression LE expression .)
    LE              reduce using rule 23 (expression -> expression LE expression .)
    GE              reduce using rule 23 (expression -> expression LE expression .)
    RPAREN          reduce using rule 23 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 23 (expression -> expression LE expression .)
    COMMA           reduce using rule 23 (expression -> expression LE expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    EQ              shift and go to state 29
    NE              shift and go to state 30

  ! PLUS            [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! LOR             [ shift and go to state 27 ]
  ! LAND            [ shift and go to state 28 ]
  ! LT              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]


state 61

    (24) expression -> expression GE expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       reduce using rule 24 (expression -> expression GE expression .)
    LOR             reduce using rule 24 (expression -> expression GE expression .)
    LAND            reduce using rule 24 (expression -> expression GE expression .)
    LT              reduce using rule 24 (expression -> expression GE expression .)
    GT              reduce using rule 24 (expression -> expression GE expression .)
    LE              reduce using rule 24 (expression -> expression GE expression .)
    GE              reduce using rule 24 (expression -> expression GE expression .)
    RPAREN          reduce using rule 24 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 24 (expression -> expression GE expression .)
    COMMA           reduce using rule 24 (expression -> expression GE expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    EQ              shift and go to state 29
    NE              shift and go to state 30

  ! PLUS            [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! LOR             [ shift and go to state 27 ]
  ! LAND            [ shift and go to state 28 ]
  ! LT              [ shift and go to state 31 ]
  ! GT              [ shift and go to state 32 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]


state 62

    (9) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       shift and go to state 74
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 63

    (33) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LOR             reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LAND            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 33 (factor -> LPAREN expression RPAREN .)


state 64

    (34) expression -> ID EQUALS . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 75
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 65

    (10) statement -> WHILE LPAREN expression . RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RPAREN          shift and go to state 76
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 66

    (11) statement -> LBRACE statements RBRACE .

    INT             reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    STRING          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    ID              reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    FOR             reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    IF              reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    STRING_LITERAL  reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    $end            reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 11 (statement -> LBRACE statements RBRACE .)


state 67

    (12) statement -> IF LPAREN expression . RPAREN statement
    (13) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 68

    (26) term -> term TIMES factor .

    TIMES           reduce using rule 26 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 26 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 26 (term -> term TIMES factor .)
    PLUS            reduce using rule 26 (term -> term TIMES factor .)
    MINUS           reduce using rule 26 (term -> term TIMES factor .)
    LOR             reduce using rule 26 (term -> term TIMES factor .)
    LAND            reduce using rule 26 (term -> term TIMES factor .)
    EQ              reduce using rule 26 (term -> term TIMES factor .)
    NE              reduce using rule 26 (term -> term TIMES factor .)
    LT              reduce using rule 26 (term -> term TIMES factor .)
    GT              reduce using rule 26 (term -> term TIMES factor .)
    LE              reduce using rule 26 (term -> term TIMES factor .)
    GE              reduce using rule 26 (term -> term TIMES factor .)
    RPAREN          reduce using rule 26 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 26 (term -> term TIMES factor .)
    COMMA           reduce using rule 26 (term -> term TIMES factor .)


state 69

    (27) term -> term DIVIDE factor .

    TIMES           reduce using rule 27 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 27 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 27 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 27 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 27 (term -> term DIVIDE factor .)
    LOR             reduce using rule 27 (term -> term DIVIDE factor .)
    LAND            reduce using rule 27 (term -> term DIVIDE factor .)
    EQ              reduce using rule 27 (term -> term DIVIDE factor .)
    NE              reduce using rule 27 (term -> term DIVIDE factor .)
    LT              reduce using rule 27 (term -> term DIVIDE factor .)
    GT              reduce using rule 27 (term -> term DIVIDE factor .)
    LE              reduce using rule 27 (term -> term DIVIDE factor .)
    GE              reduce using rule 27 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 27 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 27 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 27 (term -> term DIVIDE factor .)


state 70

    (35) expression -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    LOR             reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    LAND            reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    EQ              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    NE              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    LE              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    GE              reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 35 (expression -> LBRACKET elements RBRACKET .)


state 71

    (36) elements -> elements COMMA . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 78
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 72

    (7) statement -> ID EQUALS expression SEMICOLON .

    INT             reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACKET        reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)


state 73

    (8) statement -> ID EQUALS STRING_LITERAL SEMICOLON .

    INT             reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FLOAT           reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ID              reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FOR             reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACE          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    IF              reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACKET        reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING_LITERAL  reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    $end            reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    RBRACE          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ELSE            reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)


state 74

    (9) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 79
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 75

    (34) expression -> ID EQUALS expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
    RPAREN          reduce using rule 34 (expression -> ID EQUALS expression .)
    RBRACKET        reduce using rule 34 (expression -> ID EQUALS expression .)
    COMMA           reduce using rule 34 (expression -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 34 (expression -> ID EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34

  ! PLUS            [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LOR             [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LAND            [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! NE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! LE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]
  ! GE              [ reduce using rule 34 (expression -> ID EQUALS expression .) ]


state 76

    (10) statement -> WHILE LPAREN expression RPAREN . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 80
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 77

    (12) statement -> IF LPAREN expression RPAREN . statement
    (13) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 81
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 78

    (36) elements -> elements COMMA expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RBRACKET        reduce using rule 36 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 36 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 79

    (9) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    SEMICOLON       shift and go to state 82
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 80

    (10) statement -> WHILE LPAREN expression RPAREN statement .

    INT             reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)


state 81

    (12) statement -> IF LPAREN expression RPAREN statement .
    (13) statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    INT             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 83

  ! ELSE            [ reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .) ]


state 82

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 37
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 38
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 84
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 83

    (13) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 85
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 84

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LOR term
    (18) expression -> expression . LAND term
    (19) expression -> expression . EQ term
    (20) expression -> expression . NE term
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LOR             shift and go to state 27
    LAND            shift and go to state 28
    EQ              shift and go to state 29
    NE              shift and go to state 30
    LT              shift and go to state 31
    GT              shift and go to state 32
    LE              shift and go to state 33
    GE              shift and go to state 34


state 85

    (13) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    INT             reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 86

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LOR term
    (18) expression -> . expression LAND term
    (19) expression -> . expression EQ term
    (20) expression -> . expression NE term
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . term
    (34) expression -> . ID EQUALS expression
    (35) expression -> . LBRACKET elements RBRACKET
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) term -> . factor
    (29) factor -> . NUMBER
    (30) factor -> . FLOAT
    (31) factor -> . STRING_LITERAL
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 87
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 87

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    INT             reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FLOAT           reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACE          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACKET        reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    $end            reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for LOR in state 47 resolved as shift
WARNING: shift/reduce conflict for LAND in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NE in state 47 resolved as shift
WARNING: shift/reduce conflict for LT in state 47 resolved as shift
WARNING: shift/reduce conflict for GT in state 47 resolved as shift
WARNING: shift/reduce conflict for LE in state 47 resolved as shift
WARNING: shift/reduce conflict for GE in state 47 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for LOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LAND in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NE in state 75 resolved as shift
WARNING: shift/reduce conflict for LT in state 75 resolved as shift
WARNING: shift/reduce conflict for GT in state 75 resolved as shift
WARNING: shift/reduce conflict for LE in state 75 resolved as shift
WARNING: shift/reduce conflict for GE in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
