Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> INT ID SEMICOLON
Rule 5     statement -> FLOAT ID SEMICOLON
Rule 6     statement -> STRING ID SEMICOLON
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     statement -> ID EQUALS STRING_LITERAL SEMICOLON
Rule 9     statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 10    statement -> WHILE LPAREN expression RPAREN statement
Rule 11    statement -> LBRACE statements RBRACE
Rule 12    statement -> IF LPAREN expression RPAREN statement
Rule 13    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 14    statement -> expression SEMICOLON
Rule 15    expression -> expression PLUS term
Rule 16    expression -> expression MINUS term
Rule 17    expression -> expression LT expression
Rule 18    expression -> expression GT expression
Rule 19    expression -> term
Rule 20    term -> term TIMES factor
Rule 21    term -> term DIVIDE factor
Rule 22    term -> factor
Rule 23    factor -> NUMBER
Rule 24    factor -> FLOAT
Rule 25    factor -> STRING_LITERAL
Rule 26    factor -> ID
Rule 27    factor -> LPAREN expression RPAREN
Rule 28    expression -> ID EQUALS expression
Rule 29    expression -> LBRACKET elements RBRACKET
Rule 30    elements -> elements COMMA expression
Rule 31    elements -> expression
Rule 32    elements -> <empty>

Terminals, with rules where they appear

COMMA                : 30
DIVIDE               : 21
ELSE                 : 13
EQUALS               : 7 8 28
FLOAT                : 5 24
FOR                  : 9
GT                   : 18
ID                   : 4 5 6 7 8 26 28
IF                   : 12 13
INT                  : 4
LBRACE               : 11
LBRACKET             : 29
LPAREN               : 9 10 12 13 27
LT                   : 17
MINUS                : 16
NUMBER               : 23
PLUS                 : 15
RBRACE               : 11
RBRACKET             : 29
RPAREN               : 9 10 12 13 27
SEMICOLON            : 4 5 6 7 8 9 9 14
STRING               : 6
STRING_LITERAL       : 8 25
TIMES                : 20
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

elements             : 29 30
expression           : 7 9 9 9 10 12 13 14 15 16 17 17 18 18 27 28 30 31
factor               : 20 21 22
program              : 0
statement            : 2 3 9 10 12 13 13
statements           : 1 2 11
term                 : 15 16 19 20 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statements .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statement                      shift and go to state 19
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 3

    (3) statements -> statement .

    INT             reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    FOR             reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    LBRACE          reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    LBRACKET        reduce using rule 3 (statements -> statement .)
    NUMBER          reduce using rule 3 (statements -> statement .)
    STRING_LITERAL  reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACE          reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> INT . ID SEMICOLON

    ID              shift and go to state 20


state 5

    (7) statement -> ID . EQUALS expression SEMICOLON
    (8) statement -> ID . EQUALS STRING_LITERAL SEMICOLON
    (28) expression -> ID . EQUALS expression
    (26) factor -> ID .

    EQUALS          shift and go to state 21
    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    SEMICOLON       reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)
    LT              reduce using rule 26 (factor -> ID .)
    GT              reduce using rule 26 (factor -> ID .)


state 6

    (5) statement -> FLOAT . ID SEMICOLON
    (24) factor -> FLOAT .

    ID              shift and go to state 22
    TIMES           reduce using rule 24 (factor -> FLOAT .)
    DIVIDE          reduce using rule 24 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 24 (factor -> FLOAT .)
    PLUS            reduce using rule 24 (factor -> FLOAT .)
    MINUS           reduce using rule 24 (factor -> FLOAT .)
    LT              reduce using rule 24 (factor -> FLOAT .)
    GT              reduce using rule 24 (factor -> FLOAT .)


state 7

    (6) statement -> STRING . ID SEMICOLON

    ID              shift and go to state 23


state 8

    (14) statement -> expression . SEMICOLON
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    SEMICOLON       shift and go to state 24
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 9

    (25) factor -> STRING_LITERAL .

    TIMES           reduce using rule 25 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 25 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 25 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 25 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 25 (factor -> STRING_LITERAL .)
    LT              reduce using rule 25 (factor -> STRING_LITERAL .)
    GT              reduce using rule 25 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 25 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 25 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 25 (factor -> STRING_LITERAL .)


state 10

    (9) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN          shift and go to state 29


state 11

    (27) factor -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 30
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 12

    (10) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 33


state 13

    (11) statement -> LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statements                     shift and go to state 34
    statement                      shift and go to state 3
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 14

    (12) statement -> IF . LPAREN expression RPAREN statement
    (13) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 35


state 15

    (19) expression -> term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> term .)
    PLUS            reduce using rule 19 (expression -> term .)
    MINUS           reduce using rule 19 (expression -> term .)
    LT              reduce using rule 19 (expression -> term .)
    GT              reduce using rule 19 (expression -> term .)
    RPAREN          reduce using rule 19 (expression -> term .)
    RBRACKET        reduce using rule 19 (expression -> term .)
    COMMA           reduce using rule 19 (expression -> term .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 16

    (29) expression -> LBRACKET . elements RBRACKET
    (30) elements -> . elements COMMA expression
    (31) elements -> . expression
    (32) elements -> .
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    RBRACKET        reduce using rule 32 (elements -> .)
    COMMA           reduce using rule 32 (elements -> .)
    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    elements                       shift and go to state 38
    expression                     shift and go to state 39
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 17

    (22) term -> factor .

    TIMES           reduce using rule 22 (term -> factor .)
    DIVIDE          reduce using rule 22 (term -> factor .)
    SEMICOLON       reduce using rule 22 (term -> factor .)
    PLUS            reduce using rule 22 (term -> factor .)
    MINUS           reduce using rule 22 (term -> factor .)
    LT              reduce using rule 22 (term -> factor .)
    GT              reduce using rule 22 (term -> factor .)
    RPAREN          reduce using rule 22 (term -> factor .)
    RBRACKET        reduce using rule 22 (term -> factor .)
    COMMA           reduce using rule 22 (term -> factor .)


state 18

    (23) factor -> NUMBER .

    TIMES           reduce using rule 23 (factor -> NUMBER .)
    DIVIDE          reduce using rule 23 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 23 (factor -> NUMBER .)
    PLUS            reduce using rule 23 (factor -> NUMBER .)
    MINUS           reduce using rule 23 (factor -> NUMBER .)
    LT              reduce using rule 23 (factor -> NUMBER .)
    GT              reduce using rule 23 (factor -> NUMBER .)
    RPAREN          reduce using rule 23 (factor -> NUMBER .)
    RBRACKET        reduce using rule 23 (factor -> NUMBER .)
    COMMA           reduce using rule 23 (factor -> NUMBER .)


state 19

    (2) statements -> statements statement .

    INT             reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    ID              reduce using rule 2 (statements -> statements statement .)
    FOR             reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    LBRACE          reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    LBRACKET        reduce using rule 2 (statements -> statements statement .)
    NUMBER          reduce using rule 2 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACE          reduce using rule 2 (statements -> statements statement .)


state 20

    (4) statement -> INT ID . SEMICOLON

    SEMICOLON       shift and go to state 40


state 21

    (7) statement -> ID EQUALS . expression SEMICOLON
    (8) statement -> ID EQUALS . STRING_LITERAL SEMICOLON
    (28) expression -> ID EQUALS . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    STRING_LITERAL  shift and go to state 42
    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    LPAREN          shift and go to state 11

    expression                     shift and go to state 41
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 22

    (5) statement -> FLOAT ID . SEMICOLON

    SEMICOLON       shift and go to state 43


state 23

    (6) statement -> STRING ID . SEMICOLON

    SEMICOLON       shift and go to state 44


state 24

    (14) statement -> expression SEMICOLON .

    INT             reduce using rule 14 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 14 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 14 (statement -> expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 14 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 14 (statement -> expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 14 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 14 (statement -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 14 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 14 (statement -> expression SEMICOLON .)
    $end            reduce using rule 14 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 14 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> expression SEMICOLON .)


state 25

    (15) expression -> expression PLUS . term
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 46
    LPAREN          shift and go to state 11

    term                           shift and go to state 45
    factor                         shift and go to state 17

state 26

    (16) expression -> expression MINUS . term
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 46
    LPAREN          shift and go to state 11

    term                           shift and go to state 47
    factor                         shift and go to state 17

state 27

    (17) expression -> expression LT . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 48
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 28

    (18) expression -> expression GT . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 49
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 29

    (9) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 50
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 30

    (27) factor -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 31

    (28) expression -> ID . EQUALS expression
    (26) factor -> ID .

    EQUALS          shift and go to state 52
    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    RPAREN          reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)
    LT              reduce using rule 26 (factor -> ID .)
    GT              reduce using rule 26 (factor -> ID .)
    RBRACKET        reduce using rule 26 (factor -> ID .)
    COMMA           reduce using rule 26 (factor -> ID .)
    SEMICOLON       reduce using rule 26 (factor -> ID .)


state 32

    (24) factor -> FLOAT .

    TIMES           reduce using rule 24 (factor -> FLOAT .)
    DIVIDE          reduce using rule 24 (factor -> FLOAT .)
    RPAREN          reduce using rule 24 (factor -> FLOAT .)
    PLUS            reduce using rule 24 (factor -> FLOAT .)
    MINUS           reduce using rule 24 (factor -> FLOAT .)
    LT              reduce using rule 24 (factor -> FLOAT .)
    GT              reduce using rule 24 (factor -> FLOAT .)
    RBRACKET        reduce using rule 24 (factor -> FLOAT .)
    COMMA           reduce using rule 24 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 24 (factor -> FLOAT .)


state 33

    (10) statement -> WHILE LPAREN . expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 53
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 34

    (11) statement -> LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 54
    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    statement                      shift and go to state 19
    expression                     shift and go to state 8
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 35

    (12) statement -> IF LPAREN . expression RPAREN statement
    (13) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 55
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 36

    (20) term -> term TIMES . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 46
    LPAREN          shift and go to state 11

    factor                         shift and go to state 56

state 37

    (21) term -> term DIVIDE . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    ID              shift and go to state 46
    LPAREN          shift and go to state 11

    factor                         shift and go to state 57

state 38

    (29) expression -> LBRACKET elements . RBRACKET
    (30) elements -> elements . COMMA expression

    RBRACKET        shift and go to state 58
    COMMA           shift and go to state 59


state 39

    (31) elements -> expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RBRACKET        reduce using rule 31 (elements -> expression .)
    COMMA           reduce using rule 31 (elements -> expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 40

    (4) statement -> INT ID SEMICOLON .

    INT             reduce using rule 4 (statement -> INT ID SEMICOLON .)
    FLOAT           reduce using rule 4 (statement -> INT ID SEMICOLON .)
    STRING          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    ID              reduce using rule 4 (statement -> INT ID SEMICOLON .)
    FOR             reduce using rule 4 (statement -> INT ID SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    IF              reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> INT ID SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 4 (statement -> INT ID SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    $end            reduce using rule 4 (statement -> INT ID SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> INT ID SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> INT ID SEMICOLON .)


state 41

    (7) statement -> ID EQUALS expression . SEMICOLON
    (28) expression -> ID EQUALS expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    SEMICOLON       shift and go to state 60
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28

  ! SEMICOLON       [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 28 (expression -> ID EQUALS expression .) ]


state 42

    (8) statement -> ID EQUALS STRING_LITERAL . SEMICOLON
    (25) factor -> STRING_LITERAL .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 61
    TIMES           reduce using rule 25 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 25 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 25 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 25 (factor -> STRING_LITERAL .)
    LT              reduce using rule 25 (factor -> STRING_LITERAL .)
    GT              reduce using rule 25 (factor -> STRING_LITERAL .)

  ! SEMICOLON       [ reduce using rule 25 (factor -> STRING_LITERAL .) ]


state 43

    (5) statement -> FLOAT ID SEMICOLON .

    INT             reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    FLOAT           reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    STRING          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    ID              reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    FOR             reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LBRACE          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    IF              reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LBRACKET        reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    NUMBER          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    $end            reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)
    ELSE            reduce using rule 5 (statement -> FLOAT ID SEMICOLON .)


state 44

    (6) statement -> STRING ID SEMICOLON .

    INT             reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    FLOAT           reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    STRING          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    ID              reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    FOR             reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LBRACE          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    IF              reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LBRACKET        reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    $end            reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> STRING ID SEMICOLON .)
    ELSE            reduce using rule 6 (statement -> STRING ID SEMICOLON .)


state 45

    (15) expression -> expression PLUS term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 15 (expression -> expression PLUS term .)
    PLUS            reduce using rule 15 (expression -> expression PLUS term .)
    MINUS           reduce using rule 15 (expression -> expression PLUS term .)
    LT              reduce using rule 15 (expression -> expression PLUS term .)
    GT              reduce using rule 15 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 15 (expression -> expression PLUS term .)
    COMMA           reduce using rule 15 (expression -> expression PLUS term .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 46

    (26) factor -> ID .

    TIMES           reduce using rule 26 (factor -> ID .)
    DIVIDE          reduce using rule 26 (factor -> ID .)
    SEMICOLON       reduce using rule 26 (factor -> ID .)
    PLUS            reduce using rule 26 (factor -> ID .)
    MINUS           reduce using rule 26 (factor -> ID .)
    LT              reduce using rule 26 (factor -> ID .)
    GT              reduce using rule 26 (factor -> ID .)
    RPAREN          reduce using rule 26 (factor -> ID .)
    RBRACKET        reduce using rule 26 (factor -> ID .)
    COMMA           reduce using rule 26 (factor -> ID .)


state 47

    (16) expression -> expression MINUS term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 16 (expression -> expression MINUS term .)
    PLUS            reduce using rule 16 (expression -> expression MINUS term .)
    MINUS           reduce using rule 16 (expression -> expression MINUS term .)
    LT              reduce using rule 16 (expression -> expression MINUS term .)
    GT              reduce using rule 16 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 16 (expression -> expression MINUS term .)
    COMMA           reduce using rule 16 (expression -> expression MINUS term .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 48

    (17) expression -> expression LT expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    SEMICOLON       reduce using rule 17 (expression -> expression LT expression .)
    LT              reduce using rule 17 (expression -> expression LT expression .)
    GT              reduce using rule 17 (expression -> expression LT expression .)
    RPAREN          reduce using rule 17 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 17 (expression -> expression LT expression .)
    COMMA           reduce using rule 17 (expression -> expression LT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26

  ! PLUS            [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]


state 49

    (18) expression -> expression GT expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    SEMICOLON       reduce using rule 18 (expression -> expression GT expression .)
    LT              reduce using rule 18 (expression -> expression GT expression .)
    GT              reduce using rule 18 (expression -> expression GT expression .)
    RPAREN          reduce using rule 18 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 18 (expression -> expression GT expression .)
    COMMA           reduce using rule 18 (expression -> expression GT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26

  ! PLUS            [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 28 ]


state 50

    (9) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    SEMICOLON       shift and go to state 62
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 51

    (27) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 27 (factor -> LPAREN expression RPAREN .)


state 52

    (28) expression -> ID EQUALS . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 63
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 53

    (10) statement -> WHILE LPAREN expression . RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 54

    (11) statement -> LBRACE statements RBRACE .

    INT             reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    STRING          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    ID              reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    FOR             reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    IF              reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    STRING_LITERAL  reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    $end            reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (statement -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 11 (statement -> LBRACE statements RBRACE .)


state 55

    (12) statement -> IF LPAREN expression . RPAREN statement
    (13) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RPAREN          shift and go to state 65
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 56

    (20) term -> term TIMES factor .

    TIMES           reduce using rule 20 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 20 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 20 (term -> term TIMES factor .)
    PLUS            reduce using rule 20 (term -> term TIMES factor .)
    MINUS           reduce using rule 20 (term -> term TIMES factor .)
    LT              reduce using rule 20 (term -> term TIMES factor .)
    GT              reduce using rule 20 (term -> term TIMES factor .)
    RPAREN          reduce using rule 20 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 20 (term -> term TIMES factor .)
    COMMA           reduce using rule 20 (term -> term TIMES factor .)


state 57

    (21) term -> term DIVIDE factor .

    TIMES           reduce using rule 21 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 21 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 21 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 21 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 21 (term -> term DIVIDE factor .)
    LT              reduce using rule 21 (term -> term DIVIDE factor .)
    GT              reduce using rule 21 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 21 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 21 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 21 (term -> term DIVIDE factor .)


state 58

    (29) expression -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 29 (expression -> LBRACKET elements RBRACKET .)


state 59

    (30) elements -> elements COMMA . expression
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 66
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 60

    (7) statement -> ID EQUALS expression SEMICOLON .

    INT             reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACKET        reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)


state 61

    (8) statement -> ID EQUALS STRING_LITERAL SEMICOLON .

    INT             reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FLOAT           reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ID              reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FOR             reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACE          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    IF              reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACKET        reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING_LITERAL  reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    $end            reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    RBRACE          reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ELSE            reduce using rule 8 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)


state 62

    (9) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 67
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 63

    (28) expression -> ID EQUALS expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    RPAREN          reduce using rule 28 (expression -> ID EQUALS expression .)
    RBRACKET        reduce using rule 28 (expression -> ID EQUALS expression .)
    COMMA           reduce using rule 28 (expression -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 28 (expression -> ID EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28

  ! PLUS            [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 28 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 28 (expression -> ID EQUALS expression .) ]


state 64

    (10) statement -> WHILE LPAREN expression RPAREN . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 68
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 65

    (12) statement -> IF LPAREN expression RPAREN . statement
    (13) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 69
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 66

    (30) elements -> elements COMMA expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RBRACKET        reduce using rule 30 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 30 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 67

    (9) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 68

    (10) statement -> WHILE LPAREN expression RPAREN statement .

    INT             reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN statement .)


state 69

    (12) statement -> IF LPAREN expression RPAREN statement .
    (13) statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    INT             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 71

  ! ELSE            [ reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement .) ]


state 70

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 31
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    FLOAT           shift and go to state 32
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 72
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 71

    (13) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 73
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 72

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term
    (17) expression -> expression . LT expression
    (18) expression -> expression . GT expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    LT              shift and go to state 27
    GT              shift and go to state 28


state 73

    (13) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    INT             reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 13 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 74

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (4) statement -> . INT ID SEMICOLON
    (5) statement -> . FLOAT ID SEMICOLON
    (6) statement -> . STRING ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (9) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (10) statement -> . WHILE LPAREN expression RPAREN statement
    (11) statement -> . LBRACE statements RBRACE
    (12) statement -> . IF LPAREN expression RPAREN statement
    (13) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (14) statement -> . expression SEMICOLON
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) expression -> . expression LT expression
    (18) expression -> . expression GT expression
    (19) expression -> . term
    (28) expression -> . ID EQUALS expression
    (29) expression -> . LBRACKET elements RBRACKET
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . NUMBER
    (24) factor -> . FLOAT
    (25) factor -> . STRING_LITERAL
    (26) factor -> . ID
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 4
    FLOAT           shift and go to state 6
    STRING          shift and go to state 7
    ID              shift and go to state 5
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    LBRACE          shift and go to state 13
    IF              shift and go to state 14
    LBRACKET        shift and go to state 16
    NUMBER          shift and go to state 18
    STRING_LITERAL  shift and go to state 9
    LPAREN          shift and go to state 11

    expression                     shift and go to state 8
    statement                      shift and go to state 75
    term                           shift and go to state 15
    factor                         shift and go to state 17

state 75

    (9) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    INT             reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FLOAT           reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACE          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACKET        reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    $end            reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RBRACE          reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 9 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for LT in state 41 resolved as shift
WARNING: shift/reduce conflict for GT in state 41 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for GT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
