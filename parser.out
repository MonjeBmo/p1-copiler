Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> INT ID SEMICOLON
Rule 2     statement -> FLOAT ID SEMICOLON
Rule 3     statement -> STRING ID SEMICOLON
Rule 4     statement -> ID EQUALS expression SEMICOLON
Rule 5     statement -> ID EQUALS STRING_LITERAL SEMICOLON
Rule 6     statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 7     statement -> WHILE LPAREN expression RPAREN statement
Rule 8     statements -> statements statement
Rule 9     statements -> statement
Rule 10    statement -> LBRACE statements RBRACE
Rule 11    statement -> IF LPAREN expression RPAREN statement
Rule 12    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 13    statement -> expression SEMICOLON
Rule 14    expression -> expression PLUS term
Rule 15    expression -> expression MINUS term
Rule 16    expression -> expression LT expression
Rule 17    expression -> expression GT expression
Rule 18    expression -> term
Rule 19    term -> term TIMES factor
Rule 20    term -> term DIVIDE factor
Rule 21    term -> factor
Rule 22    factor -> NUMBER
Rule 23    factor -> FLOAT
Rule 24    factor -> STRING_LITERAL
Rule 25    factor -> ID
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    expression -> ID EQUALS expression
Rule 28    expression -> LBRACKET elements RBRACKET
Rule 29    elements -> elements COMMA expression
Rule 30    elements -> expression
Rule 31    elements -> <empty>

Terminals, with rules where they appear

COMMA                : 29
DIVIDE               : 20
ELSE                 : 12
EQUALS               : 4 5 27
FLOAT                : 2 23
FOR                  : 6
GT                   : 17
ID                   : 1 2 3 4 5 25 27
IF                   : 11 12
INT                  : 1
LBRACE               : 10
LBRACKET             : 28
LPAREN               : 6 7 11 12 26
LT                   : 16
MINUS                : 15
NUMBER               : 22
PLUS                 : 14
RBRACE               : 10
RBRACKET             : 28
RPAREN               : 6 7 11 12 26
SEMICOLON            : 1 2 3 4 5 6 6 13
STRING               : 3
STRING_LITERAL       : 5 24
TIMES                : 19
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

elements             : 28 29
expression           : 4 6 6 6 7 11 12 13 14 15 16 16 17 17 26 27 29 30
factor               : 19 20 21
statement            : 6 7 8 9 11 12 12 0
statements           : 8 10
term                 : 14 15 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 6
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 1

    (0) S' -> statement .



state 2

    (1) statement -> INT . ID SEMICOLON

    ID              shift and go to state 17


state 3

    (4) statement -> ID . EQUALS expression SEMICOLON
    (5) statement -> ID . EQUALS STRING_LITERAL SEMICOLON
    (27) expression -> ID . EQUALS expression
    (25) factor -> ID .

    EQUALS          shift and go to state 18
    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    SEMICOLON       reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    LT              reduce using rule 25 (factor -> ID .)
    GT              reduce using rule 25 (factor -> ID .)


state 4

    (2) statement -> FLOAT . ID SEMICOLON
    (23) factor -> FLOAT .

    ID              shift and go to state 19
    TIMES           reduce using rule 23 (factor -> FLOAT .)
    DIVIDE          reduce using rule 23 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 23 (factor -> FLOAT .)
    PLUS            reduce using rule 23 (factor -> FLOAT .)
    MINUS           reduce using rule 23 (factor -> FLOAT .)
    LT              reduce using rule 23 (factor -> FLOAT .)
    GT              reduce using rule 23 (factor -> FLOAT .)


state 5

    (3) statement -> STRING . ID SEMICOLON

    ID              shift and go to state 20


state 6

    (13) statement -> expression . SEMICOLON
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    SEMICOLON       shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 7

    (24) factor -> STRING_LITERAL .

    TIMES           reduce using rule 24 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 24 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 24 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 24 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 24 (factor -> STRING_LITERAL .)
    LT              reduce using rule 24 (factor -> STRING_LITERAL .)
    GT              reduce using rule 24 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 24 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 24 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 24 (factor -> STRING_LITERAL .)


state 8

    (6) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN          shift and go to state 26


state 9

    (26) factor -> LPAREN . expression RPAREN
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 27
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 10

    (7) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 30


state 11

    (10) statement -> LBRACE . statements RBRACE
    (8) statements -> . statements statement
    (9) statements -> . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    statements                     shift and go to state 31
    statement                      shift and go to state 32
    expression                     shift and go to state 6
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 12

    (11) statement -> IF . LPAREN expression RPAREN statement
    (12) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 33


state 13

    (18) expression -> term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> term .)
    PLUS            reduce using rule 18 (expression -> term .)
    MINUS           reduce using rule 18 (expression -> term .)
    LT              reduce using rule 18 (expression -> term .)
    GT              reduce using rule 18 (expression -> term .)
    RPAREN          reduce using rule 18 (expression -> term .)
    RBRACKET        reduce using rule 18 (expression -> term .)
    COMMA           reduce using rule 18 (expression -> term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 14

    (28) expression -> LBRACKET . elements RBRACKET
    (29) elements -> . elements COMMA expression
    (30) elements -> . expression
    (31) elements -> .
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    RBRACKET        reduce using rule 31 (elements -> .)
    COMMA           reduce using rule 31 (elements -> .)
    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    elements                       shift and go to state 36
    expression                     shift and go to state 37
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 15

    (21) term -> factor .

    TIMES           reduce using rule 21 (term -> factor .)
    DIVIDE          reduce using rule 21 (term -> factor .)
    SEMICOLON       reduce using rule 21 (term -> factor .)
    PLUS            reduce using rule 21 (term -> factor .)
    MINUS           reduce using rule 21 (term -> factor .)
    LT              reduce using rule 21 (term -> factor .)
    GT              reduce using rule 21 (term -> factor .)
    RPAREN          reduce using rule 21 (term -> factor .)
    RBRACKET        reduce using rule 21 (term -> factor .)
    COMMA           reduce using rule 21 (term -> factor .)


state 16

    (22) factor -> NUMBER .

    TIMES           reduce using rule 22 (factor -> NUMBER .)
    DIVIDE          reduce using rule 22 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 22 (factor -> NUMBER .)
    PLUS            reduce using rule 22 (factor -> NUMBER .)
    MINUS           reduce using rule 22 (factor -> NUMBER .)
    LT              reduce using rule 22 (factor -> NUMBER .)
    GT              reduce using rule 22 (factor -> NUMBER .)
    RPAREN          reduce using rule 22 (factor -> NUMBER .)
    RBRACKET        reduce using rule 22 (factor -> NUMBER .)
    COMMA           reduce using rule 22 (factor -> NUMBER .)


state 17

    (1) statement -> INT ID . SEMICOLON

    SEMICOLON       shift and go to state 38


state 18

    (4) statement -> ID EQUALS . expression SEMICOLON
    (5) statement -> ID EQUALS . STRING_LITERAL SEMICOLON
    (27) expression -> ID EQUALS . expression
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    STRING_LITERAL  shift and go to state 40
    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    LPAREN          shift and go to state 9

    expression                     shift and go to state 39
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 19

    (2) statement -> FLOAT ID . SEMICOLON

    SEMICOLON       shift and go to state 41


state 20

    (3) statement -> STRING ID . SEMICOLON

    SEMICOLON       shift and go to state 42


state 21

    (13) statement -> expression SEMICOLON .

    $end            reduce using rule 13 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 13 (statement -> expression SEMICOLON .)
    INT             reduce using rule 13 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 13 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 13 (statement -> expression SEMICOLON .)
    ID              reduce using rule 13 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 13 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 13 (statement -> expression SEMICOLON .)
    IF              reduce using rule 13 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 13 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 13 (statement -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 13 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 13 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> expression SEMICOLON .)


state 22

    (14) expression -> expression PLUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    ID              shift and go to state 44
    LPAREN          shift and go to state 9

    term                           shift and go to state 43
    factor                         shift and go to state 15

state 23

    (15) expression -> expression MINUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    ID              shift and go to state 44
    LPAREN          shift and go to state 9

    term                           shift and go to state 45
    factor                         shift and go to state 15

state 24

    (16) expression -> expression LT . expression
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 46
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 25

    (17) expression -> expression GT . expression
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 47
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 26

    (6) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 48
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 27

    (26) factor -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 28

    (27) expression -> ID . EQUALS expression
    (25) factor -> ID .

    EQUALS          shift and go to state 50
    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    RPAREN          reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    LT              reduce using rule 25 (factor -> ID .)
    GT              reduce using rule 25 (factor -> ID .)
    RBRACKET        reduce using rule 25 (factor -> ID .)
    COMMA           reduce using rule 25 (factor -> ID .)
    SEMICOLON       reduce using rule 25 (factor -> ID .)


state 29

    (23) factor -> FLOAT .

    TIMES           reduce using rule 23 (factor -> FLOAT .)
    DIVIDE          reduce using rule 23 (factor -> FLOAT .)
    RPAREN          reduce using rule 23 (factor -> FLOAT .)
    PLUS            reduce using rule 23 (factor -> FLOAT .)
    MINUS           reduce using rule 23 (factor -> FLOAT .)
    LT              reduce using rule 23 (factor -> FLOAT .)
    GT              reduce using rule 23 (factor -> FLOAT .)
    RBRACKET        reduce using rule 23 (factor -> FLOAT .)
    COMMA           reduce using rule 23 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 23 (factor -> FLOAT .)


state 30

    (7) statement -> WHILE LPAREN . expression RPAREN statement
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 51
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 31

    (10) statement -> LBRACE statements . RBRACE
    (8) statements -> statements . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 52
    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    statement                      shift and go to state 53
    expression                     shift and go to state 6
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 32

    (9) statements -> statement .

    RBRACE          reduce using rule 9 (statements -> statement .)
    INT             reduce using rule 9 (statements -> statement .)
    FLOAT           reduce using rule 9 (statements -> statement .)
    STRING          reduce using rule 9 (statements -> statement .)
    ID              reduce using rule 9 (statements -> statement .)
    FOR             reduce using rule 9 (statements -> statement .)
    WHILE           reduce using rule 9 (statements -> statement .)
    LBRACE          reduce using rule 9 (statements -> statement .)
    IF              reduce using rule 9 (statements -> statement .)
    LBRACKET        reduce using rule 9 (statements -> statement .)
    NUMBER          reduce using rule 9 (statements -> statement .)
    STRING_LITERAL  reduce using rule 9 (statements -> statement .)
    LPAREN          reduce using rule 9 (statements -> statement .)


state 33

    (11) statement -> IF LPAREN . expression RPAREN statement
    (12) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 54
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 34

    (19) term -> term TIMES . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    ID              shift and go to state 44
    LPAREN          shift and go to state 9

    factor                         shift and go to state 55

state 35

    (20) term -> term DIVIDE . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    ID              shift and go to state 44
    LPAREN          shift and go to state 9

    factor                         shift and go to state 56

state 36

    (28) expression -> LBRACKET elements . RBRACKET
    (29) elements -> elements . COMMA expression

    RBRACKET        shift and go to state 57
    COMMA           shift and go to state 58


state 37

    (30) elements -> expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RBRACKET        reduce using rule 30 (elements -> expression .)
    COMMA           reduce using rule 30 (elements -> expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 38

    (1) statement -> INT ID SEMICOLON .

    $end            reduce using rule 1 (statement -> INT ID SEMICOLON .)
    RBRACE          reduce using rule 1 (statement -> INT ID SEMICOLON .)
    INT             reduce using rule 1 (statement -> INT ID SEMICOLON .)
    FLOAT           reduce using rule 1 (statement -> INT ID SEMICOLON .)
    STRING          reduce using rule 1 (statement -> INT ID SEMICOLON .)
    ID              reduce using rule 1 (statement -> INT ID SEMICOLON .)
    FOR             reduce using rule 1 (statement -> INT ID SEMICOLON .)
    WHILE           reduce using rule 1 (statement -> INT ID SEMICOLON .)
    LBRACE          reduce using rule 1 (statement -> INT ID SEMICOLON .)
    IF              reduce using rule 1 (statement -> INT ID SEMICOLON .)
    LBRACKET        reduce using rule 1 (statement -> INT ID SEMICOLON .)
    NUMBER          reduce using rule 1 (statement -> INT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 1 (statement -> INT ID SEMICOLON .)
    LPAREN          reduce using rule 1 (statement -> INT ID SEMICOLON .)
    ELSE            reduce using rule 1 (statement -> INT ID SEMICOLON .)


state 39

    (4) statement -> ID EQUALS expression . SEMICOLON
    (27) expression -> ID EQUALS expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    SEMICOLON       shift and go to state 59
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25

  ! SEMICOLON       [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 27 (expression -> ID EQUALS expression .) ]


state 40

    (5) statement -> ID EQUALS STRING_LITERAL . SEMICOLON
    (24) factor -> STRING_LITERAL .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 60
    TIMES           reduce using rule 24 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 24 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 24 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 24 (factor -> STRING_LITERAL .)
    LT              reduce using rule 24 (factor -> STRING_LITERAL .)
    GT              reduce using rule 24 (factor -> STRING_LITERAL .)

  ! SEMICOLON       [ reduce using rule 24 (factor -> STRING_LITERAL .) ]


state 41

    (2) statement -> FLOAT ID SEMICOLON .

    $end            reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    RBRACE          reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    INT             reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    FLOAT           reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    STRING          reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    ID              reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    FOR             reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    WHILE           reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    LBRACE          reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    IF              reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    LBRACKET        reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    NUMBER          reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    LPAREN          reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)
    ELSE            reduce using rule 2 (statement -> FLOAT ID SEMICOLON .)


state 42

    (3) statement -> STRING ID SEMICOLON .

    $end            reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    RBRACE          reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    INT             reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    FLOAT           reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    STRING          reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    ID              reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    FOR             reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    LBRACE          reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    IF              reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    LBRACKET        reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    NUMBER          reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    STRING_LITERAL  reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> STRING ID SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> STRING ID SEMICOLON .)


state 43

    (14) expression -> expression PLUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 14 (expression -> expression PLUS term .)
    PLUS            reduce using rule 14 (expression -> expression PLUS term .)
    MINUS           reduce using rule 14 (expression -> expression PLUS term .)
    LT              reduce using rule 14 (expression -> expression PLUS term .)
    GT              reduce using rule 14 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 14 (expression -> expression PLUS term .)
    COMMA           reduce using rule 14 (expression -> expression PLUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 44

    (25) factor -> ID .

    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    SEMICOLON       reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    LT              reduce using rule 25 (factor -> ID .)
    GT              reduce using rule 25 (factor -> ID .)
    RPAREN          reduce using rule 25 (factor -> ID .)
    RBRACKET        reduce using rule 25 (factor -> ID .)
    COMMA           reduce using rule 25 (factor -> ID .)


state 45

    (15) expression -> expression MINUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 15 (expression -> expression MINUS term .)
    PLUS            reduce using rule 15 (expression -> expression MINUS term .)
    MINUS           reduce using rule 15 (expression -> expression MINUS term .)
    LT              reduce using rule 15 (expression -> expression MINUS term .)
    GT              reduce using rule 15 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 15 (expression -> expression MINUS term .)
    COMMA           reduce using rule 15 (expression -> expression MINUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 46

    (16) expression -> expression LT expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    SEMICOLON       reduce using rule 16 (expression -> expression LT expression .)
    LT              reduce using rule 16 (expression -> expression LT expression .)
    GT              reduce using rule 16 (expression -> expression LT expression .)
    RPAREN          reduce using rule 16 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 16 (expression -> expression LT expression .)
    COMMA           reduce using rule 16 (expression -> expression LT expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]


state 47

    (17) expression -> expression GT expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    SEMICOLON       reduce using rule 17 (expression -> expression GT expression .)
    LT              reduce using rule 17 (expression -> expression GT expression .)
    GT              reduce using rule 17 (expression -> expression GT expression .)
    RPAREN          reduce using rule 17 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 17 (expression -> expression GT expression .)
    COMMA           reduce using rule 17 (expression -> expression GT expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 24 ]
  ! GT              [ shift and go to state 25 ]


state 48

    (6) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    SEMICOLON       shift and go to state 61
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 49

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 50

    (27) expression -> ID EQUALS . expression
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 62
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 51

    (7) statement -> WHILE LPAREN expression . RPAREN statement
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 52

    (10) statement -> LBRACE statements RBRACE .

    $end            reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    INT             reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    STRING          reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    ID              reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    FOR             reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    IF              reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    STRING_LITERAL  reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 10 (statement -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 10 (statement -> LBRACE statements RBRACE .)


state 53

    (8) statements -> statements statement .

    RBRACE          reduce using rule 8 (statements -> statements statement .)
    INT             reduce using rule 8 (statements -> statements statement .)
    FLOAT           reduce using rule 8 (statements -> statements statement .)
    STRING          reduce using rule 8 (statements -> statements statement .)
    ID              reduce using rule 8 (statements -> statements statement .)
    FOR             reduce using rule 8 (statements -> statements statement .)
    WHILE           reduce using rule 8 (statements -> statements statement .)
    LBRACE          reduce using rule 8 (statements -> statements statement .)
    IF              reduce using rule 8 (statements -> statements statement .)
    LBRACKET        reduce using rule 8 (statements -> statements statement .)
    NUMBER          reduce using rule 8 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 8 (statements -> statements statement .)
    LPAREN          reduce using rule 8 (statements -> statements statement .)


state 54

    (11) statement -> IF LPAREN expression . RPAREN statement
    (12) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 55

    (19) term -> term TIMES factor .

    TIMES           reduce using rule 19 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 19 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 19 (term -> term TIMES factor .)
    PLUS            reduce using rule 19 (term -> term TIMES factor .)
    MINUS           reduce using rule 19 (term -> term TIMES factor .)
    LT              reduce using rule 19 (term -> term TIMES factor .)
    GT              reduce using rule 19 (term -> term TIMES factor .)
    RPAREN          reduce using rule 19 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 19 (term -> term TIMES factor .)
    COMMA           reduce using rule 19 (term -> term TIMES factor .)


state 56

    (20) term -> term DIVIDE factor .

    TIMES           reduce using rule 20 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 20 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 20 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 20 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 20 (term -> term DIVIDE factor .)
    LT              reduce using rule 20 (term -> term DIVIDE factor .)
    GT              reduce using rule 20 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 20 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 20 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 20 (term -> term DIVIDE factor .)


state 57

    (28) expression -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 28 (expression -> LBRACKET elements RBRACKET .)


state 58

    (29) elements -> elements COMMA . expression
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 65
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 59

    (4) statement -> ID EQUALS expression SEMICOLON .

    $end            reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    LBRACKET        reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> ID EQUALS expression SEMICOLON .)


state 60

    (5) statement -> ID EQUALS STRING_LITERAL SEMICOLON .

    $end            reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    INT             reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FLOAT           reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING          reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ID              reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    FOR             reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACE          reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    IF              reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LBRACKET        reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    NUMBER          reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    STRING_LITERAL  reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)
    ELSE            reduce using rule 5 (statement -> ID EQUALS STRING_LITERAL SEMICOLON .)


state 61

    (6) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 66
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 62

    (27) expression -> ID EQUALS expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    RPAREN          reduce using rule 27 (expression -> ID EQUALS expression .)
    RBRACKET        reduce using rule 27 (expression -> ID EQUALS expression .)
    COMMA           reduce using rule 27 (expression -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 27 (expression -> ID EQUALS expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25

  ! PLUS            [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! LT              [ reduce using rule 27 (expression -> ID EQUALS expression .) ]
  ! GT              [ reduce using rule 27 (expression -> ID EQUALS expression .) ]


state 63

    (7) statement -> WHILE LPAREN expression RPAREN . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 6
    statement                      shift and go to state 67
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 64

    (11) statement -> IF LPAREN expression RPAREN . statement
    (12) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 6
    statement                      shift and go to state 68
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 65

    (29) elements -> elements COMMA expression .
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RBRACKET        reduce using rule 29 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 29 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 66

    (6) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    SEMICOLON       shift and go to state 69
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 67

    (7) statement -> WHILE LPAREN expression RPAREN statement .

    $end            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)


state 68

    (11) statement -> IF LPAREN expression RPAREN statement .
    (12) statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 70

  ! ELSE            [ reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement .) ]


state 69

    (6) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 28
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    FLOAT           shift and go to state 29
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 71
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 70

    (12) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 6
    statement                      shift and go to state 72
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 71

    (6) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement
    (14) expression -> expression . PLUS term
    (15) expression -> expression . MINUS term
    (16) expression -> expression . LT expression
    (17) expression -> expression . GT expression

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25


state 72

    (12) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    $end            reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 12 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 73

    (6) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (1) statement -> . INT ID SEMICOLON
    (2) statement -> . FLOAT ID SEMICOLON
    (3) statement -> . STRING ID SEMICOLON
    (4) statement -> . ID EQUALS expression SEMICOLON
    (5) statement -> . ID EQUALS STRING_LITERAL SEMICOLON
    (6) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (10) statement -> . LBRACE statements RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement
    (12) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (13) statement -> . expression SEMICOLON
    (14) expression -> . expression PLUS term
    (15) expression -> . expression MINUS term
    (16) expression -> . expression LT expression
    (17) expression -> . expression GT expression
    (18) expression -> . term
    (27) expression -> . ID EQUALS expression
    (28) expression -> . LBRACKET elements RBRACKET
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . FLOAT
    (24) factor -> . STRING_LITERAL
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    ID              shift and go to state 3
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    LBRACKET        shift and go to state 14
    NUMBER          shift and go to state 16
    STRING_LITERAL  shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 6
    statement                      shift and go to state 74
    term                           shift and go to state 13
    factor                         shift and go to state 15

state 74

    (6) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    $end            reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RBRACE          reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    INT             reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FLOAT           reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING          reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ID              reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACE          reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LBRACKET        reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    NUMBER          reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    LPAREN          reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 6 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for LT in state 39 resolved as shift
WARNING: shift/reduce conflict for GT in state 39 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
