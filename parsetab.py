
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLORleftLANDleftLTGTleftPLUSMINUSleftEQleftNEleftTIMESDIVIDECOMMA DIVIDE ELSE EQ EQUALS FLOAT FOR GT ID IF INT LAND LBRACE LBRACKET LOR LPAREN LT MINUS NE NUMBER PLUS RBRACE RBRACKET RPAREN SEMICOLON STRING STRING_LITERAL TIMES WHILEprogram : statementsstatements : statements statement\n                  | statementstatement : INT ID SEMICOLON\n                 | FLOAT ID SEMICOLON\n                 | STRING ID SEMICOLONstatement : ID EQUALS expression SEMICOLON\n                 | ID EQUALS STRING_LITERAL SEMICOLONstatement : FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statementstatement : WHILE LPAREN expression RPAREN statementstatement : LBRACE statements RBRACEstatement : IF LPAREN expression RPAREN statement\n                 | IF LPAREN expression RPAREN statement ELSE statementstatement : expression SEMICOLONexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression LOR term\n                  | expression LAND term\n                  | expression EQ term\n                  | expression NE termexpression : expression LT expression\n                  | expression GT expressionexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBER\n              | FLOATfactor : STRING_LITERALfactor : IDfactor : LPAREN expression RPARENexpression : ID EQUALS expressionexpression : LBRACKET elements RBRACKETelements : elements COMMA expressionelements : expressionelements : '
    
_lr_action_items = {'INT':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[4,4,-3,4,-2,-14,4,-4,-5,-6,-11,-7,-8,4,4,-10,-12,4,-13,4,-9,]),'FLOAT':([0,2,3,11,13,16,19,21,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[6,6,-3,36,6,36,-2,36,-14,36,36,36,36,36,36,36,36,36,36,6,36,36,36,-4,-5,-6,36,-11,36,-7,-8,36,6,6,-10,-12,36,6,-13,6,-9,]),'STRING':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[7,7,-3,7,-2,-14,7,-4,-5,-6,-11,-7,-8,7,7,-10,-12,7,-13,7,-9,]),'ID':([0,2,3,4,6,7,11,13,16,19,21,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[5,5,-3,20,22,23,35,5,35,-2,35,-14,50,50,50,50,50,50,35,35,35,35,5,35,50,50,-4,-5,-6,35,-11,35,-7,-8,35,5,5,-10,-12,35,5,-13,5,-9,]),'FOR':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[10,10,-3,10,-2,-14,10,-4,-5,-6,-11,-7,-8,10,10,-10,-12,10,-13,10,-9,]),'WHILE':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[12,12,-3,12,-2,-14,12,-4,-5,-6,-11,-7,-8,12,12,-10,-12,12,-13,12,-9,]),'LBRACE':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[13,13,-3,13,-2,-14,13,-4,-5,-6,-11,-7,-8,13,13,-10,-12,13,-13,13,-9,]),'IF':([0,2,3,13,19,24,38,44,47,48,62,68,69,72,73,76,77,79,81,82,83,],[14,14,-3,14,-2,-14,14,-4,-5,-6,-11,-7,-8,14,14,-10,-12,14,-13,14,-9,]),'LBRACKET':([0,2,3,11,13,16,19,21,24,31,32,33,37,38,39,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[16,16,-3,16,16,16,-2,16,-14,16,16,16,16,16,16,-4,-5,-6,16,-11,16,-7,-8,16,16,16,-10,-12,16,16,-13,16,-9,]),'NUMBER':([0,2,3,11,13,16,19,21,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[18,18,-3,18,18,18,-2,18,-14,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-4,-5,-6,18,-11,18,-7,-8,18,18,18,-10,-12,18,18,-13,18,-9,]),'STRING_LITERAL':([0,2,3,11,13,16,19,21,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[9,9,-3,9,9,9,-2,46,-14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-4,-5,-6,9,-11,9,-7,-8,9,9,9,-10,-12,9,9,-13,9,-9,]),'LPAREN':([0,2,3,10,11,12,13,14,16,19,21,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,44,47,48,60,62,67,68,69,70,72,73,76,77,78,79,81,82,83,],[11,11,-3,33,11,37,11,39,11,-2,11,-14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-4,-5,-6,11,-11,11,-7,-8,11,11,11,-10,-12,11,11,-13,11,-9,]),'$end':([1,2,3,19,24,44,47,48,62,68,69,76,77,81,83,],[0,-1,-3,-2,-14,-4,-5,-6,-11,-7,-8,-10,-12,-13,-9,]),'RBRACE':([3,19,24,38,44,47,48,62,68,69,76,77,81,83,],[-3,-2,-14,62,-4,-5,-6,-11,-7,-8,-10,-12,-13,-9,]),'EQUALS':([5,35,],[21,60,]),'TIMES':([5,6,9,15,17,18,35,36,46,49,50,51,52,53,54,55,59,64,65,],[-30,-28,-29,40,-26,-27,-30,-28,-29,40,-30,40,40,40,40,40,-31,-24,-25,]),'DIVIDE':([5,6,9,15,17,18,35,36,46,49,50,51,52,53,54,55,59,64,65,],[-30,-28,-29,41,-26,-27,-30,-28,-29,41,-30,41,41,41,41,41,-31,-24,-25,]),'SEMICOLON':([5,6,8,9,15,17,18,20,22,23,35,36,45,46,49,50,51,52,53,54,55,56,57,58,59,64,65,66,71,75,],[-30,-28,24,-29,-23,-26,-27,44,47,48,-30,-28,68,69,-15,-30,-16,-17,-18,-19,-20,-21,-22,70,-31,-24,-25,-33,-32,78,]),'PLUS':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,25,-29,-23,-26,-27,25,-30,-28,25,25,-29,-15,-30,-16,-17,-18,-19,-20,25,25,25,-31,25,25,-24,-25,-33,25,25,25,25,]),'MINUS':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,26,-29,-23,-26,-27,26,-30,-28,26,26,-29,-15,-30,-16,-17,-18,-19,-20,26,26,26,-31,26,26,-24,-25,-33,26,26,26,26,]),'LOR':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,27,-29,-23,-26,-27,27,-30,-28,27,27,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,27,-31,27,27,-24,-25,-33,27,27,27,27,]),'LAND':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,28,-29,-23,-26,-27,28,-30,-28,28,28,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,28,-31,28,28,-24,-25,-33,28,28,28,28,]),'EQ':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,29,-29,-23,-26,-27,29,-30,-28,29,29,-29,-15,-30,-16,-17,-18,-19,-20,29,29,29,-31,29,29,-24,-25,-33,29,29,29,29,]),'NE':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,30,-29,-23,-26,-27,30,-30,-28,30,30,-29,-15,-30,-16,-17,-18,-19,-20,30,30,30,-31,30,30,-24,-25,-33,30,30,30,30,]),'LT':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,31,-29,-23,-26,-27,31,-30,-28,31,31,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,31,-31,31,31,-24,-25,-33,31,31,31,31,]),'GT':([5,6,8,9,15,17,18,34,35,36,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,71,74,75,80,],[-30,-28,32,-29,-23,-26,-27,32,-30,-28,32,32,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,32,-31,32,32,-24,-25,-33,32,32,32,32,]),'RPAREN':([9,15,17,18,34,35,36,49,50,51,52,53,54,55,56,57,59,61,63,64,65,66,71,80,],[-29,-23,-26,-27,59,-30,-28,-15,-30,-16,-17,-18,-19,-20,-21,-22,-31,72,73,-24,-25,-33,-32,82,]),'RBRACKET':([9,15,16,17,18,35,36,42,43,49,50,51,52,53,54,55,56,57,59,64,65,66,71,74,],[-29,-23,-36,-26,-27,-30,-28,66,-35,-15,-30,-16,-17,-18,-19,-20,-21,-22,-31,-24,-25,-33,-32,-34,]),'COMMA':([9,15,16,17,18,35,36,42,43,49,50,51,52,53,54,55,56,57,59,64,65,66,71,74,],[-29,-23,-36,-26,-27,-30,-28,67,-35,-15,-30,-16,-17,-18,-19,-20,-21,-22,-31,-24,-25,-33,-32,-34,]),'ELSE':([24,44,47,48,62,68,69,76,77,81,83,],[-14,-4,-5,-6,-11,-7,-8,-10,79,-13,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,13,],[2,38,]),'statement':([0,2,13,38,72,73,79,82,],[3,19,3,19,76,77,81,83,]),'expression':([0,2,11,13,16,21,31,32,33,37,38,39,60,67,70,72,73,78,79,82,],[8,8,34,8,43,45,56,57,58,61,8,63,71,74,75,8,8,80,8,8,]),'term':([0,2,11,13,16,21,25,26,27,28,29,30,31,32,33,37,38,39,60,67,70,72,73,78,79,82,],[15,15,15,15,15,15,49,51,52,53,54,55,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'factor':([0,2,11,13,16,21,25,26,27,28,29,30,31,32,33,37,38,39,40,41,60,67,70,72,73,78,79,82,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,64,65,17,17,17,17,17,17,17,17,]),'elements':([16,],[42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','sintactico.py',17),
  ('statements -> statements statement','statements',2,'p_statements','sintactico.py',21),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',22),
  ('statement -> INT ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',29),
  ('statement -> FLOAT ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',30),
  ('statement -> STRING ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',31),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','sintactico.py',35),
  ('statement -> ID EQUALS STRING_LITERAL SEMICOLON','statement',4,'p_statement_assignment','sintactico.py',36),
  ('statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement','statement',9,'p_statement_for','sintactico.py',40),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','sintactico.py',44),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','sintactico.py',48),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','sintactico.py',52),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','sintactico.py',53),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','sintactico.py',60),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','sintactico.py',64),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','sintactico.py',65),
  ('expression -> expression LOR term','expression',3,'p_expression_binop','sintactico.py',66),
  ('expression -> expression LAND term','expression',3,'p_expression_binop','sintactico.py',67),
  ('expression -> expression EQ term','expression',3,'p_expression_binop','sintactico.py',68),
  ('expression -> expression NE term','expression',3,'p_expression_binop','sintactico.py',69),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','sintactico.py',73),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','sintactico.py',74),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',78),
  ('term -> term TIMES factor','term',3,'p_term_binop','sintactico.py',82),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','sintactico.py',83),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',87),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',91),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',92),
  ('factor -> STRING_LITERAL','factor',1,'p_factor_string','sintactico.py',96),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',100),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',104),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_equals','sintactico.py',108),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_expression_list','sintactico.py',112),
  ('elements -> elements COMMA expression','elements',3,'p_elements_multiple','sintactico.py',116),
  ('elements -> expression','elements',1,'p_elements_single','sintactico.py',120),
  ('elements -> <empty>','elements',0,'p_elements_empty','sintactico.py',124),
]
