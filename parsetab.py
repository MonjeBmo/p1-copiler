
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTGTleftPLUSMINUSleftTIMESDIVIDECOMMA DIVIDE ELSE EQUALS FLOAT FOR GT ID IF INT LBRACE LBRACKET LPAREN LT MINUS NUMBER PLUS RBRACE RBRACKET RPAREN SEMICOLON STRING STRING_LITERAL TIMES WHILEstatement : INT ID SEMICOLON\n                 | FLOAT ID SEMICOLON\n                 | STRING ID SEMICOLONstatement : ID EQUALS expression SEMICOLON\n                 | ID EQUALS STRING_LITERAL SEMICOLONstatement : FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statementstatement : WHILE LPAREN expression RPAREN statementstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : IF LPAREN expression RPAREN statement\n                 | IF LPAREN expression RPAREN statement ELSE statementstatement : expression SEMICOLONexpression : expression PLUS term\n                  | expression MINUS termexpression : expression LT expression\n                  | expression GT expressionexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBER\n              | FLOATfactor : STRING_LITERALfactor : IDfactor : LPAREN expression RPARENexpression : ID EQUALS expressionexpression : LBRACKET elements RBRACKETelements : elements COMMA expressionelements : expressionelements : '
    
_lr_action_items = {'INT':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[2,2,-13,2,-9,-1,-2,-3,-10,-8,-4,-5,2,2,-7,-11,2,-12,2,-6,]),'FLOAT':([0,9,11,14,18,21,22,23,24,25,26,30,31,32,33,34,35,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[4,29,4,29,29,-13,29,29,29,29,29,29,4,-9,29,29,29,-1,-2,-3,29,-10,-8,29,-4,-5,29,4,4,-7,-11,29,4,-12,4,-6,]),'STRING':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[5,5,-13,5,-9,-1,-2,-3,-10,-8,-4,-5,5,5,-7,-11,5,-12,5,-6,]),'ID':([0,2,4,5,9,11,14,18,21,22,23,24,25,26,30,31,32,33,34,35,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[3,17,19,20,28,3,28,28,-13,44,44,28,28,28,28,3,-9,28,44,44,-1,-2,-3,28,-10,-8,28,-4,-5,28,3,3,-7,-11,28,3,-12,3,-6,]),'FOR':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[8,8,-13,8,-9,-1,-2,-3,-10,-8,-4,-5,8,8,-7,-11,8,-12,8,-6,]),'WHILE':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[10,10,-13,10,-9,-1,-2,-3,-10,-8,-4,-5,10,10,-7,-11,10,-12,10,-6,]),'LBRACE':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[11,11,-13,11,-9,-1,-2,-3,-10,-8,-4,-5,11,11,-7,-11,11,-12,11,-6,]),'IF':([0,11,21,31,32,38,41,42,52,53,59,60,63,64,67,68,70,72,73,74,],[12,12,-13,12,-9,-1,-2,-3,-10,-8,-4,-5,12,12,-7,-11,12,-12,12,-6,]),'LBRACKET':([0,9,11,14,18,21,24,25,26,30,31,32,33,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[14,14,14,14,14,-13,14,14,14,14,14,-9,14,-1,-2,-3,14,-10,-8,14,-4,-5,14,14,14,-7,-11,14,14,-12,14,-6,]),'NUMBER':([0,9,11,14,18,21,22,23,24,25,26,30,31,32,33,34,35,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[16,16,16,16,16,-13,16,16,16,16,16,16,16,-9,16,16,16,-1,-2,-3,16,-10,-8,16,-4,-5,16,16,16,-7,-11,16,16,-12,16,-6,]),'STRING_LITERAL':([0,9,11,14,18,21,22,23,24,25,26,30,31,32,33,34,35,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[7,7,7,7,40,-13,7,7,7,7,7,7,7,-9,7,7,7,-1,-2,-3,7,-10,-8,7,-4,-5,7,7,7,-7,-11,7,7,-12,7,-6,]),'LPAREN':([0,8,9,10,11,12,14,18,21,22,23,24,25,26,30,31,32,33,34,35,38,41,42,50,52,53,58,59,60,61,63,64,67,68,69,70,72,73,74,],[9,26,9,30,9,33,9,9,-13,9,9,9,9,9,9,9,-9,9,9,9,-1,-2,-3,9,-10,-8,9,-4,-5,9,9,9,-7,-11,9,9,-12,9,-6,]),'$end':([1,21,38,41,42,52,59,60,67,68,72,74,],[0,-13,-1,-2,-3,-10,-4,-5,-7,-11,-12,-6,]),'EQUALS':([3,28,],[18,50,]),'TIMES':([3,4,7,13,15,16,28,29,40,43,44,45,49,55,56,],[-25,-23,-24,34,-21,-22,-25,-23,-24,34,-25,34,-26,-19,-20,]),'DIVIDE':([3,4,7,13,15,16,28,29,40,43,44,45,49,55,56,],[-25,-23,-24,35,-21,-22,-25,-23,-24,35,-25,35,-26,-19,-20,]),'SEMICOLON':([3,4,6,7,13,15,16,17,19,20,28,29,39,40,43,44,45,46,47,48,49,55,56,57,62,66,],[-25,-23,21,-24,-18,-21,-22,38,41,42,-25,-23,59,60,-14,-25,-15,-16,-17,61,-26,-19,-20,-28,-27,69,]),'PLUS':([3,4,6,7,13,15,16,27,28,29,37,39,40,43,44,45,46,47,48,49,51,54,55,56,57,62,65,66,71,],[-25,-23,22,-24,-18,-21,-22,22,-25,-23,22,22,-24,-14,-25,-15,22,22,22,-26,22,22,-19,-20,-28,22,22,22,22,]),'MINUS':([3,4,6,7,13,15,16,27,28,29,37,39,40,43,44,45,46,47,48,49,51,54,55,56,57,62,65,66,71,],[-25,-23,23,-24,-18,-21,-22,23,-25,-23,23,23,-24,-14,-25,-15,23,23,23,-26,23,23,-19,-20,-28,23,23,23,23,]),'LT':([3,4,6,7,13,15,16,27,28,29,37,39,40,43,44,45,46,47,48,49,51,54,55,56,57,62,65,66,71,],[-25,-23,24,-24,-18,-21,-22,24,-25,-23,24,24,-24,-14,-25,-15,-16,-17,24,-26,24,24,-19,-20,-28,24,24,24,24,]),'GT':([3,4,6,7,13,15,16,27,28,29,37,39,40,43,44,45,46,47,48,49,51,54,55,56,57,62,65,66,71,],[-25,-23,25,-24,-18,-21,-22,25,-25,-23,25,25,-24,-14,-25,-15,-16,-17,25,-26,25,25,-19,-20,-28,25,25,25,25,]),'RPAREN':([7,13,15,16,27,28,29,43,44,45,46,47,49,51,54,55,56,57,62,71,],[-24,-18,-21,-22,49,-25,-23,-14,-25,-15,-16,-17,-26,63,64,-19,-20,-28,-27,73,]),'RBRACKET':([7,13,14,15,16,28,29,36,37,43,44,45,46,47,49,55,56,57,62,65,],[-24,-18,-31,-21,-22,-25,-23,57,-30,-14,-25,-15,-16,-17,-26,-19,-20,-28,-27,-29,]),'COMMA':([7,13,14,15,16,28,29,36,37,43,44,45,46,47,49,55,56,57,62,65,],[-24,-18,-31,-21,-22,-25,-23,58,-30,-14,-25,-15,-16,-17,-26,-19,-20,-28,-27,-29,]),'RBRACE':([21,31,32,38,41,42,52,53,59,60,67,68,72,74,],[-13,52,-9,-1,-2,-3,-10,-8,-4,-5,-7,-11,-12,-6,]),'ELSE':([21,38,41,42,52,59,60,67,68,72,74,],[-13,-1,-2,-3,-10,-4,-5,-7,70,-12,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,11,31,63,64,70,73,],[1,32,53,67,68,72,74,]),'expression':([0,9,11,14,18,24,25,26,30,31,33,50,58,61,63,64,69,70,73,],[6,27,6,37,39,46,47,48,51,6,54,62,65,66,6,6,71,6,6,]),'term':([0,9,11,14,18,22,23,24,25,26,30,31,33,50,58,61,63,64,69,70,73,],[13,13,13,13,13,43,45,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'factor':([0,9,11,14,18,22,23,24,25,26,30,31,33,34,35,50,58,61,63,64,69,70,73,],[15,15,15,15,15,15,15,15,15,15,15,15,15,55,56,15,15,15,15,15,15,15,15,]),'statements':([11,],[31,]),'elements':([14,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> INT ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',13),
  ('statement -> FLOAT ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',14),
  ('statement -> STRING ID SEMICOLON','statement',3,'p_statement_declaration','sintactico.py',15),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','sintactico.py',19),
  ('statement -> ID EQUALS STRING_LITERAL SEMICOLON','statement',4,'p_statement_assignment','sintactico.py',20),
  ('statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement','statement',9,'p_statement_for','sintactico.py',24),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','sintactico.py',28),
  ('statements -> statements statement','statements',2,'p_statements','sintactico.py',32),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',33),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','sintactico.py',40),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','sintactico.py',44),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','sintactico.py',45),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','sintactico.py',52),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','sintactico.py',56),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','sintactico.py',57),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','sintactico.py',61),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','sintactico.py',62),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',66),
  ('term -> term TIMES factor','term',3,'p_term_binop','sintactico.py',70),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','sintactico.py',71),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',75),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',79),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',80),
  ('factor -> STRING_LITERAL','factor',1,'p_factor_string','sintactico.py',84),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',88),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',92),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_equals','sintactico.py',96),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_expression_list','sintactico.py',100),
  ('elements -> elements COMMA expression','elements',3,'p_elements_multiple','sintactico.py',104),
  ('elements -> expression','elements',1,'p_elements_single','sintactico.py',108),
  ('elements -> <empty>','elements',0,'p_elements_empty','sintactico.py',112),
]
