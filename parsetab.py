
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTGTleftPLUSMINUSleftTIMESDIVIDECOMMA DIVIDE ELSE EQUALS FOR GT ID IF LBRACE LBRACKET LPAREN LT MINUS NUMBER PLUS RBRACE RBRACKET RPAREN SEMICOLON TIMES WHILEstatement : FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statementstatement : WHILE LPAREN expression RPAREN statementstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : IF LPAREN expression RPAREN statement\n                 | IF LPAREN expression RPAREN statement ELSE statementstatement : expression SEMICOLONexpression : expression PLUS term\n                  | expression MINUS termexpression : expression LT expression\n                  | expression GT expressionexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LPAREN expression RPARENexpression : ID EQUALS expressionexpression : LBRACKET elements RBRACKETelements : elements COMMA expressionelements : expression'
    
_lr_action_items = {'FOR':([0,6,15,21,22,37,38,46,47,50,51,53,55,56,57,],[2,2,-8,2,-4,-5,-3,2,2,-2,-6,2,-7,2,-1,]),'WHILE':([0,6,15,21,22,37,38,46,47,50,51,53,55,56,57,],[5,5,-8,5,-4,-5,-3,5,5,-2,-6,5,-7,5,-1,]),'LBRACE':([0,6,15,21,22,37,38,46,47,50,51,53,55,56,57,],[6,6,-8,6,-4,-5,-3,6,6,-2,-6,6,-7,6,-1,]),'IF':([0,6,15,21,22,37,38,46,47,50,51,53,55,56,57,],[7,7,-8,7,-4,-5,-3,7,7,-2,-6,7,-7,7,-1,]),'ID':([0,3,6,10,13,15,16,17,18,19,20,21,22,23,24,25,26,37,38,44,45,46,47,50,51,52,53,55,56,57,],[9,9,9,9,9,-8,32,32,9,9,9,9,-4,9,32,32,9,-5,-3,9,9,9,9,-2,-6,9,9,-7,9,-1,]),'LBRACKET':([0,3,6,10,13,15,18,19,20,21,22,23,26,37,38,44,45,46,47,50,51,52,53,55,56,57,],[10,10,10,10,10,-8,10,10,10,10,-4,10,10,-5,-3,10,10,10,10,-2,-6,10,10,-7,10,-1,]),'NUMBER':([0,3,6,10,13,15,16,17,18,19,20,21,22,23,24,25,26,37,38,44,45,46,47,50,51,52,53,55,56,57,],[12,12,12,12,12,-8,12,12,12,12,12,12,-4,12,12,12,12,-5,-3,12,12,12,12,-2,-6,12,12,-7,12,-1,]),'LPAREN':([0,2,3,5,6,7,10,13,15,16,17,18,19,20,21,22,23,24,25,26,37,38,44,45,46,47,50,51,52,53,55,56,57,],[3,13,3,20,3,23,3,3,-8,3,3,3,3,3,3,-4,3,3,3,3,-5,-3,3,3,3,3,-2,-6,3,3,-7,3,-1,]),'$end':([1,15,37,50,51,55,57,],[0,-8,-5,-2,-6,-7,-1,]),'SEMICOLON':([4,8,9,11,12,29,30,31,32,33,34,35,40,41,42,43,49,],[15,-13,-18,-16,-17,45,-19,-9,-18,-10,-11,-12,-14,-15,-20,-21,52,]),'PLUS':([4,8,9,11,12,14,28,29,30,31,32,33,34,35,36,39,40,41,42,43,48,49,54,],[16,-13,-18,-16,-17,16,16,16,-19,-9,-18,-10,16,16,16,16,-14,-15,16,-21,16,16,16,]),'MINUS':([4,8,9,11,12,14,28,29,30,31,32,33,34,35,36,39,40,41,42,43,48,49,54,],[17,-13,-18,-16,-17,17,17,17,-19,-9,-18,-10,17,17,17,17,-14,-15,17,-21,17,17,17,]),'LT':([4,8,9,11,12,14,28,29,30,31,32,33,34,35,36,39,40,41,42,43,48,49,54,],[18,-13,-18,-16,-17,18,18,18,-19,-9,-18,-10,-11,-12,18,18,-14,-15,18,-21,18,18,18,]),'GT':([4,8,9,11,12,14,28,29,30,31,32,33,34,35,36,39,40,41,42,43,48,49,54,],[19,-13,-18,-16,-17,19,19,19,-19,-9,-18,-10,-11,-12,19,19,-14,-15,19,-21,19,19,19,]),'RPAREN':([8,9,11,12,14,30,31,32,33,34,35,36,39,40,41,42,43,54,],[-13,-18,-16,-17,30,-19,-9,-18,-10,-11,-12,46,47,-14,-15,-20,-21,56,]),'RBRACKET':([8,9,11,12,27,28,30,31,32,33,34,35,40,41,42,43,48,],[-13,-18,-16,-17,43,-23,-19,-9,-18,-10,-11,-12,-14,-15,-20,-21,-22,]),'COMMA':([8,9,11,12,27,28,30,31,32,33,34,35,40,41,42,43,48,],[-13,-18,-16,-17,44,-23,-19,-9,-18,-10,-11,-12,-14,-15,-20,-21,-22,]),'TIMES':([8,9,11,12,30,31,32,33,40,41,],[24,-18,-16,-17,-19,24,-18,24,-14,-15,]),'DIVIDE':([8,9,11,12,30,31,32,33,40,41,],[25,-18,-16,-17,-19,25,-18,25,-14,-15,]),'EQUALS':([9,],[26,]),'RBRACE':([15,21,22,37,38,50,51,55,57,],[-8,37,-4,-5,-3,-2,-6,-7,-1,]),'ELSE':([15,37,50,51,55,57,],[-8,-5,-2,53,-7,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,6,21,46,47,53,56,],[1,22,38,50,51,55,57,]),'expression':([0,3,6,10,13,18,19,20,21,23,26,44,45,46,47,52,53,56,],[4,14,4,28,29,34,35,36,4,39,42,48,49,4,4,54,4,4,]),'term':([0,3,6,10,13,16,17,18,19,20,21,23,26,44,45,46,47,52,53,56,],[8,8,8,8,8,31,33,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'factor':([0,3,6,10,13,16,17,18,19,20,21,23,24,25,26,44,45,46,47,52,53,56,],[11,11,11,11,11,11,11,11,11,11,11,11,40,41,11,11,11,11,11,11,11,11,]),'statements':([6,],[21,]),'elements':([10,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement','statement',9,'p_statement_for','sintactico.py',16),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','sintactico.py',20),
  ('statements -> statements statement','statements',2,'p_statements','sintactico.py',24),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',25),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','sintactico.py',32),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','sintactico.py',36),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','sintactico.py',37),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','sintactico.py',44),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','sintactico.py',48),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','sintactico.py',49),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','sintactico.py',53),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','sintactico.py',54),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',58),
  ('term -> term TIMES factor','term',3,'p_term_binop','sintactico.py',62),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','sintactico.py',63),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',67),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',71),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',75),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',79),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_equals','sintactico.py',83),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_expression_list','sintactico.py',88),
  ('elements -> elements COMMA expression','elements',3,'p_elements_multiple','sintactico.py',92),
  ('elements -> expression','elements',1,'p_elements_single','sintactico.py',96),
]
